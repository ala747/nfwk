@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@mixin baseline-font-size($target, $context: 16px) {
  font-size: ($target / $context) * $context; /* #{$target}px / #{$context}px */
  $lineHeight: ceil($target / $baseline) * $baseline;
  // set in pixels due to em rounding issues breaking the rhythm */

  line-height: $lineHeight; 
}

@mixin baseline-margin($context: 16px, $topAmount: 1, $bottomAmount: 1) {
  // set in pixels due to em rounding issues breaking the rhythm */
  margin-top: #{$topAmount * $baseline};
  margin-bottom: #{$bottomAmount * $baseline};

}

@mixin baseline-padding($context: 16px, $topAmount: 1, $bottomAmount: 1 ) {
  // set in pixels due to em rounding issues breaking the rhythm */
  padding-top: #{$topAmount * $baseline};
  padding-bottom: #{$bottomAmount * $baseline};
}

@mixin baseline-float($direction: left) {
  float: $direction;
  margin: 0 12px;
  margin-#{$direction}: 0;
}


@function secondary() {
  $color : $primary;
  @if $scheme-type == 'square' or $scheme-type == 'rectangle' or $scheme-type == 'complementary' {
    @return adjust-hue($color, 180deg);
  }
  @if $scheme-type == 'triad' {
    @return adjust-hue($color, -120deg);
  }
  @if $scheme-type == 'analogous' {
    @return adjust-hue($color, 30deg);
  }
  @if $scheme-type == 'split-complementary' {
    @return adjust-hue($color, 150deg);
  }
  @else {
    @return $color;
  }
}
@function tertiary() {
  $color : $primary;
  @if $scheme-type == 'square' {
    @return adjust-hue($color, 90deg);
  }
  @if $scheme-type == 'rectangle' {
    @return adjust-hue($color, 50deg);
  }
  @if $scheme-type == 'triad' {
    @return adjust-hue($color, 120deg);
  }
  @if $scheme-type == 'analogous' {
    @return adjust-hue($color, -30deg);
  }
  @if $scheme-type == 'split-complementary' {
    @return adjust-hue($color, -150deg);
  }
  @else {
    @return $color;
  }
}
@function quadrary() {
  $color : $primary;
  @if $scheme-type == 'square' {
    @return adjust-hue($color, -90deg);
  }
  @if $scheme-type == 'rectangle' {
    @return adjust-hue($color, 140deg);
  }
  @else {
    @return $color;
  }
}

@function is-dark($color) {
  @if (lightness($color) < 60% and (hue($color) >= 210 or hue($color) <= 27)) or (lightness($color) <= 50%)  {
    @return true;
  } @else {
    @return false;
  }
}

@mixin text-color($bg_color) {
  @if is-dark($bg_color){
    color: lighten(white, lightness($bg_color) / 5); //$text-color-light
  }
  @else {
    color: black; //$text-color-dark
  }
}

@function set-saturation($color, $saturation) {
  @return hsla(hue($color), $saturation, lightness($color), alpha($color));
}

@function set-lightness($color, $lightness) {
  @return hsla(hue($color), saturation($color), $lightness, alpha($color));
}

@mixin text-emphasis-variant($color) {
	color: $color;
	& a:hover {
		color: mix($color, black, 80%);
	}
}

@mixin bg-variant($color) {
	background-color: $color !important;
  @include text-color($color);
	& a:hover {
		background-color: darken($color, 10%) !important;
	}
}

@mixin transition($transition) {
	-webkit-transition: $transition;
	transition: $transition;
}

// Drop shadows
@mixin box-shadow($shadow) {
	-webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
	box-shadow: $shadow;
}

// Opacity
@mixin opacity($opacity) {
	opacity: $opacity;
	// IE8 filter
	$opacity-ie: ($opacity * 100);
	filter: unquote("alpha(opacity=${opacity-ie})");
}

// Button variants
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin button-variant($color, $background, $hover-background, $active-background, $disabled-background: $gray1) {
  @include text-color($background);
  background-color: $background;

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open .dropdown-toggle {
    //@include text-color($hover-background);
    @include text-color($background);
    background-color: $hover-background;
    border-color: $hover-background;
  }
  &:active,
  &.active,
  .open .dropdown-toggle {
    background: $active-background;
    border-color: $active-background;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
      border-color: $background;
    }
  }
}

// Button sizes
// -------------------------
@mixin button-size($padding-vertical: .25, $padding-horizontal: .25, $font-size: $font-size-base, $border-radius: $border-radius-base) {
	padding-left: round($font-size * $padding-horizontal);
  padding-right: round($font-size * $padding-horizontal);
  @include baseline-padding($font-size, $padding-vertical, $padding-vertical);
  //top: -#{$padding-vertical * $baseline};
	// font-size: $font-size;
	// line-height: $line-height;
  @include baseline-font-size($font-size);
	border-radius: $border-radius;
}
